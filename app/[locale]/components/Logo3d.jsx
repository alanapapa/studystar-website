/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ntpk.glb 
*/

import React, { Suspense, useRef } from 'react'
import {
    OrbitControls,
    PerspectiveCamera,
    useAnimations,
    useGLTF,
} from '@react-three/drei'
import { Canvas, useFrame } from '@react-three/fiber'
import { motion } from 'framer-motion-3d'
import { scroll, animate } from 'framer-motion'

export function Model(props) {
    const { nodes, materials } = useGLTF('/gtpk.glb')
    const group = useRef()

    useFrame((state, delta) => {
        // group.current.rotation.y += delta
    })

    const variants = {
        hidden: { opacity: 0, scale: 0, rotate: 360, x: 0, y: 10 },
        visible: { opacity: 1, scale: 1, rotate: 0, x: 0, y: 0 },
    }
    return (
        <group
            animate={{
                rotate: 90,
            }}
            {...props}
            dispose={null}
            ref={group}
            className="carousel"
        >
            <motion.mesh
                geometry={nodes.Curve014.geometry}
                material={materials.SVGMat}
                position={[0, 0, 0]}
                // scale={1}
                initial="hidden"
                animate="visible"
                variants={variants}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.6,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve015.geometry}
                material={materials['SVGMat.001']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: {
                        opacity: 0,
                        scale: 0,
                        x: -100,
                        y: -100,
                    },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0, rotateX: 0.1 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.4,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve016.geometry}
                material={materials['SVGMat.002']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: -100 },
                    visible: {
                        opacity: 1,
                        scale: 1,
                        x: 0,
                        y: 0,
                        rotateX: -0.1,
                    },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.6,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve017.geometry}
                material={materials['SVGMat.003']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: -100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.6,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve018.geometry}
                material={materials['SVGMat.004']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: 100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.7,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve019.geometry}
                material={materials['SVGMat.005']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: 100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.8,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve020.geometry}
                material={materials['SVGMat.006']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: 100, y: 100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0, rotateX: 0.1 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.9,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve021.geometry}
                material={materials['SVGMat.007']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: 100, y: 100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.7,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve022.geometry}
                material={materials['SVGMat.008']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: 100, y: 100 },
                    visible: {
                        opacity: 1,
                        scale: 1,
                        x: 0,
                        y: 0,
                        rotateX: -0.1,
                    },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.8,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve023.geometry}
                material={materials['SVGMat.009']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: -100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.6,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve024.geometry}
                material={materials['SVGMat.010']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: -100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0, rotateX: 0.1 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.3,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve025.geometry}
                material={materials['SVGMat.011']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: -100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.4,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve026.geometry}
                material={materials['SVGMat.012']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: -100 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.5,
                }}
            />
            <motion.mesh
                geometry={nodes.Curve027.geometry}
                material={materials['SVGMat.013']}
                position={[0, 0, 0]}
                initial="hidden"
                animate="visible"
                variants={{
                    hidden: { opacity: 0, scale: 0, x: -100, y: 0 },
                    visible: { opacity: 1, scale: 1, x: 0, y: 0 },
                }}
                transition={{
                    easy: 'easyInOut',
                    duration: 0.6,
                }}
            />
        </group>
    )
}

export default function Logo3d() {
    return (
        <Canvas
            shadows
            frameloop="demand"
            camera={{ fov: 45, near: 0.1, far: 200, position: [-4, 3, 16] }}
            gl={{ preserveDrawingBuffer: true }}
        >
            <ambientLight intensity={3} position={(10, 10, 10)} />
            <motion.pointLight intensity={1} castShadow animate={{ y: 2 }} />
            {/* <Suspense> */}
            <Model scale={70} position={[-4, -3, 0]} />
            {/* </Suspense> */}
            <OrbitControls
                autoRotate
                autoRotateSpeed={5}
                enablePan={false}
                enableZoom={false}
                minPolarAngle={Math.PI / 2}
                maxPolarAngle={Math.PI / 2}
            />
        </Canvas>
    )
}

useGLTF.preload('/gtpk.glb')
